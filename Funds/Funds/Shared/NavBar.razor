@inject Funds.Data.ICookieService CookieService
@inject Funds.Data.IAuthService AuthService
@inject NavigationManager Navigation

<div id="navigation-div">
    <ul class="custom-navbar">
        <li id="dashboard" class="@dashboardStyleButtonClass"><a class="navb-link" href="" @onclick="Dashboard">Home</a></li>
        <li id="watchlist" class="@watchlistStyleButtonClass"><a class="navb-link" href="" @onclick="Watchlist">Watchlist</a></li>
        <li class="navbar-item"><a class="navb-link" href="" @onclick="LogOut">Log out</a></li>
    </ul>
</div>

@code {
    private string dashboardStyleButtonClass = "navbar-item";
    private string watchlistStyleButtonClass = "navbar-item";

    protected override void OnParametersSet()
    {
        if(AuthService.Action == "dashboard")
        {
            watchlistStyleButtonClass = "navbar-item";
            dashboardStyleButtonClass = "navbar-item-active";
            return;
        }
        if (AuthService.Action == "watchlist")
        {
            watchlistStyleButtonClass = "navbar-item-active";
            dashboardStyleButtonClass = "navbar-item";
            return;
        }
    }

    void Watchlist()
    {
        if (!AuthService.IsLoggedIn)
            return;
        Navigation.NavigateTo("watchlist");
        dashboardStyleButtonClass = "navbar-item";
        watchlistStyleButtonClass = "navbar-item-active";
    }

    void Dashboard()
    {
        if (!AuthService.IsLoggedIn)
            return;
        Navigation.NavigateTo("dashboard");
        watchlistStyleButtonClass = "navbar-item";
        dashboardStyleButtonClass = "navbar-item-active";
    }

    private async Task LogOut()
    {
        if (! await AuthService.LogOut())
            return;
        await CookieService.DeleteCookieAsync("login");
        await CookieService.DeleteCookieAsync("refreshToken");
        dashboardStyleButtonClass = "navbar-item";
        watchlistStyleButtonClass = "navbar-item";
        Navigation.NavigateTo("login");
    }
}
