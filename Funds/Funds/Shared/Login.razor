@inject Funds.Data.IAuthService AuthService
@inject Funds.Data.ICookieService CookieService
@inject NavigationManager Navigation

<p hidden="@dontShowErrorMessage"> @errorMessage</p>
<h3>Login</h3>
<label for="login">Login</label>
<br>
<input type="text" id="login" @bind-value="login">
<br>
<label for="password">Password</label>
<br>
<input type="password" id="password" @bind-value="password">
<br>
<button @onclick="LogIn">Login</button>
<button @onclick="Register">Sign up</button>


@code {

    public string login = "";

    public string accessToken = "";

    public string refreshToken = "";

    string email = "";
    string password = "";
    bool dontShowErrorMessage = true;
    string errorMessage = "Something went wrong";


    async Task LogIn()
    {
        var tokens = await AuthService.LoginUser(login, password);
        if (tokens is null)
        {
            ShowError("Incorrect Login or Password");
            return;
        }
        refreshToken = tokens.RefreshToken;
        accessToken = tokens.AccessToken;
        await CookieService.CreateCookieAsync("refreshToken", refreshToken, DateTime.Now.AddDays(5));
        await CookieService.CreateCookieAsync("login", login, DateTime.Now.AddDays(5));
        dontShowErrorMessage = true;
        Navigation.NavigateTo("dashboard");
    }

    private void ShowError(string newErrorMessage)
    {
        errorMessage = newErrorMessage;
        dontShowErrorMessage = false;
    }

    private void Register()
    {
        Navigation.NavigateTo("register");
    }
}
