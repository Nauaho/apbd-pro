@using Funds.Data;
@using Funds.Models;

@inject NavigationManager Navigation

@if (DataIsfetched)
{
    <div class="main">
        <table id="watchlist">
            <thead>
                <tr>
                    @foreach (var s in IsColumnsAreSorted)
                    {
                        <th @onclick="() => SortBy(s.Key)"><p class="headers">@s.Key </p><div class="arrow @s.Value"></div></th>
                    }
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var s in StocksToShow)
                {
                    <tr class="row">
                        @if (s.IconUrl is not null)
                        {
                            <td class="column" @onclick="() => NavigateToStock(s)"><img class="icon" src="data:image/png;base64, @s.IconUrl"></td>
                        }
                        else
                        {
                            <td class="column" @onclick="() => NavigateToStock(s)"><div class="icon substitute"></div></td>
                        }
                        <td class="column" @onclick="() => NavigateToStock(s)">@s.Ticker</td>
                        <td class="column" @onclick="() => NavigateToStock(s)">@s.Name</td>
                        <td class="column" @onclick="() => NavigateToStock(s)">@s.Locale</td>
                        <td class="column">@if (Stocks.Any(s1 => s1.Ticker == s.Ticker))
                            {
                                <button class="deleteButton" @onclick="() => Unsubscribe(s.Ticker)">X</button>
                            }
                            else
                            {
                                <button class="subButton" @onclick="() => Subscribe(s)">+</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="loader"></div>
}
@code {


    protected virtual void NavigateToStock(StocksPreview s)
    {
        Navigation.NavigateTo($"dashboard/{s.Ticker}");
    }

}
