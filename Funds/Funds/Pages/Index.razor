@page "/"
@page "/{action}"
@inject Funds.Data.IAuthService AuthService

@if (action == "login" || string.IsNullOrEmpty(action))
{
    <p hidden="@dontShowErrorMessage"> @errorMessage</p>
    <h3>Login</h3>
    <label for="login">Login</label>
    <br>
    <input type="text" id="login" @bind-value="login" >
    <br>
    <label for="password">Password</label>
    <br>
    <input type="password" id="password" @bind-value="password">
    <br>
    <button @onclick ="LogIn" >Login</button>
    <button @onclick="Register">Sign up</button>
}
@if(action == "register")
{
    <p hidden="@dontShowErrorMessage"> @errorMessage</p>
    <h3>Sign up</h3>
    <label for="email">Email</label>
    <br>
    <input type="email" id="email" @bind-value="email">
    <br>
    <label for="login">Login</label>
    <br>
    <input type="text" id="login" @bind-value="login">
    <br>
    <label for="password">Password</label>
    <br>
    <input type="password" id="password" @bind-value="password">
    <br>
    <button @onclick="SignUp">Sign up</button>
    <br>
    <br>
    <p>Already have an account? <button @onclick="SignIn">Sign in</button></p>
}

@if(action == login)
{
    <h1>Welcome back, @login!</h1>
}

@code {
    [Parameter]
    public string action { get; set; } = "login";
    string login = "";
    string email = "";
    string password = "";
    string? accessToken = null!;
    string refreshToken = null!;

    bool dontShowErrorMessage = true;
    string errorMessage = "Something went wrong";

    async Task LogIn()
    {
        accessToken = await AuthService.LoginUser(login, password);
        if (accessToken is null)
        {
            ShowError("Incorrect Login or Password");
        }
        else
        {
            action = login;
            dontShowErrorMessage = true;
            Console.WriteLine($"Action {action}");
        }
    }

    async Task SignUp()
    {
        var tokens = await AuthService.RegisterUser(login, password, email == "" ? null : email);
        if (tokens is null)
            ShowError("Sorry, the email or login you have submitted are already in use");
        else
        {
            accessToken = tokens.Token;
            refreshToken = tokens.RefreshToken;
            dontShowErrorMessage = true;
            action = login;
        }
    }

    void Register()
    {
        action = "register";
    }

    void SignIn()
    {
        action = "login";
    }

    private void ShowError(string newErrorMessage)
    {
        Console.WriteLine("Error occured");
        errorMessage = newErrorMessage;
        dontShowErrorMessage = false;
    } 
}
