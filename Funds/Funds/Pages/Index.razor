@page "/"
@page "/{action}"
@page "/{action}/{stockOrSearch}"
@page "/{action}/{stockOrSearch}/{input}"
@inject Funds.Data.IAuthService AuthService
@inject Funds.Data.IStocksService StocksService
@inject Funds.Data.ICookieService CookieService
@inject NavigationManager Navigation


@if (loadingIsCompleted)
{

    @if (string.IsNullOrEmpty(action))
    {
        <Basic></Basic>
    }

    @if (action == "login")
    {
        <Login></Login>
    }
    @if (action == "register")
    {
        <Register></Register>
    }

    @if (action == "dashboard")
    {
        <Dashboard></Dashboard>

        @if (stockOrSearch == "search")
        {
            <SearchResults searchInput="@input"></SearchResults>
        }

        else if (!string.IsNullOrEmpty(stockOrSearch))
        {
            <StockInfo stock="@stockOrSearch"></StockInfo>
        }

    }

    @if (action == "watchlist" && AuthService.IsLoggedIn)
    {
        <Watchlist></Watchlist>
    }

}
else
{
    <div class="loader"></div>
}
@code {
    [Parameter]
    public string action { get; set; } = null!;
    [Parameter]
    public string stockOrSearch { get; set; } = null!;
    [Parameter]
    public string input { get; set; } = null!;

    private bool loadingIsCompleted = false;

    protected override void OnParametersSet()
    {
        AuthService.Action = action;
        Console.WriteLine(AuthService.Action);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Console.WriteLine($"From after render: {AuthService.Action}");
        if (loadingIsCompleted)
            return;

        var t = await CookieService.ReadCookieAsync("refreshToken");
        var l = await CookieService.ReadCookieAsync("login");

        if (t == null || l == null)
        {
            Navigation.NavigateTo("");
            loadingIsCompleted = true;
            return;
        }

        var tokens = await AuthService.RefreshTheToken(l,t);
        if(tokens is null)
        {
            Navigation.NavigateTo("login");
            loadingIsCompleted = true;
            return;
        }
        await CookieService.CreateCookieAsync("login", l, DateTime.Now.AddDays(5));
        await CookieService.CreateCookieAsync("refreshToken", tokens.RefreshToken, DateTime.Now.AddDays(5));
        loadingIsCompleted = true;
        if (string.IsNullOrEmpty(action) || action == "login" || action == "register")
            Navigation.NavigateTo("dashboard");
        StateHasChanged();
    }
}
